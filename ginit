#!/bin/env bash

if ! source bashlib_y;then
	echo -e "\033[41m\033[33mERROR    :\033[m \033[31m""bashlib_y not found.\033[m"
	exit 1
fi

if [ ! -e .git ];then
	yellow "'.git' directory not found."
	if ask_yes_no "Create it?";then
		git init
	else
		die "Exiting."
	fi
fi
G_USER=`git config user.name`
G_EMAIL=`git config user.email`
ask_yes_no_color yellow magenta
if [ -z "$G_USER" -o -z "$G_EMAIL" ];then
	yellow "Missing user and/or email for git."
	for g in `find ~/git_project -maxdepth 2 -type d -name .git`;do
		if [ -e $g/config ];then
			if [ -z "$G_USER" ];then
				g_user=$( (cd $g/..; git config user.name) )
				if [ -n "$g_user" ];then
					dbv $g_user
					if [ -z "$G_EMAIL" ];then
						g_email=$( (cd $g/..; git config user.email) )
						if [ -n "$g_email" ] ;then
							echo -e "Found '$cyan$g_user$white' and '$cyan$g_email$white' in '$cyan$g/config'$white."
							if ask_yes_no "Use them?"; then
								G_USER=$g_user
								G_EMAIL=$g_email
								dbv
								git config user.name $g_user
								dbv
								git config user.email $g_email
								dbv
								break
							fi
						fi
					else
						echo -e "Found '$cyan$g_user$white' in '$cyan$g/config'$white."
						if ask_yes_no "Use '$g_user' ?"; then
							G_USER=$g_user
							git config user.name $g_user
							break
						fi
					fi
				fi
			elif [ -z "$G_EMAIL" ];then
				g_email=$( (cd $g/..; git config user.email) )
				if [ -n "$g_email" ] ;then
					echo -e "Found '$cyan$g_email$white' in '$cyan$g/config'$white."
					if ask_yes_no "Use $g_email ?"; then
						G_EMAIL=$g_email
						git config user.email $g_email
						break
					fi
				fi
			fi
		fi
	done
	if [ -z "$G_USER" -o -z "$G_EMAIL" ];then
		die "Missing user and/or email for git. Please set user by executing 'git config user.name USER_NAME\ngit user.email EMAIL'"
	fi
fi


crep(){
	local FL=(`git ls-files`)
	local fnd
	for f in ${FL[@]};do
		if [ $f = README.md ];then
			fnd=1
			break
		fi
	done
	if [ -z "$fnd" ];then
		git add README.md
		git commit -a -m "0"
	fi
	git branch -M main
	git remote set-url origin git@github.com:$G_USER/$target.git
	local ret="`git remote add origin git@github.com:$G_USER/$target.git 2>&1`"
	if ! [ "$ret" = "error: remote origin already exists." ];then
		echo $ret
	fi
	git push -u origin main 2>&1| while read ln;do
		if [ "$ln" = "ERROR: Repository not found." ];then
			echo "ERROR: Remote repository not found. \nPlease make the repository, '$target' and reexececute 'git push -u origin main' manually" >&2
		fi
		if [ "${ln:0:17}" = "ERROR: Permission" ];then
			echo $ln
			echo "Please check ssh access rights. Ex. 'git config core.sshCommand'"
		fi
	done
}


if [ -z "$1" ];then
	PWD="`pwd`"
	if [ "${PWD%/*}" != $HOME/git_project ];then
		echo "ERROR: Current direcotry is not an entry in \$HOME/git_project." >&2
	fi
	target=${PWD##*/}
else
	target=$1
fi

G_USER=`git config user.name`
if [ -z "$G_USER" ];then
	echo "ERROR: Missing user for git. 
Please set user by executing 'git user.name --(global|local) USER_NAME'"
fi

if ! [[ $target =~ ^[0-9A-Za-z_]+$ ]];then
	echo "ERROR: Illeagal name, '$target'"
fi

mkdir -p ~/git_project/$target
cd ~/git_project/$target

if ! [ -d ~/git_project/$target/.git ];then
	echo "# $target" >> README.md
	git init
fi
crep


